1) header()
    PHP can generate a http header by function header()
    the header code must be the head of all code.
    e.g.
    #redirect
    <?php
        header('Location: http://www.guitarwars.net/about.php');
    ?>

    #redirect after x seconds
    <?php
        header('Refresh: 5; url=http://www.guitarwars.net/about.php');
        echo 'In 5 seconds you'll be taken to the About page.';
    ?>

    #display in plain mode
    <?php
        header('Content-Type: text/plain');
        echo 'This <strong>text</strong> won't actually be bold.';
    ?>

    #username & password
    <?php
        header('HTTP/1.1 401 Unauthorized');
        header('WWW-Authenticate: Basic realm="Guitar Wars"');
    ?>

2) realm in WWW-Authenticate
    browser can remember the user/pass in its memory.

3) $_SERVER['PHP_AUTH_USER'],$_SERVER['PHP_AUTH_PW']
    When use auth , you can use $_SERVER to fetch the user's data.

4) exit()
    PHP use exit() to exit the script without run any code else.

5) [sql] TINYINT
    just as BOOL

6) isset
    if the db value is NULL, when we call "SELECT * FROM xx",
isset($row['x']) is false.

    if the db value is 0, when we call "SELECT * FROM xx" isset($row['x']) is
true


7) [sql] SQL comment
    --
    #
    /* ... */

8) [sql]
    SQL injection
    Dangerous characters: ,,',",--,#, , 

9) The solution of SQL injection
    9.1) trim()
    9.2) mysqli_real_escape_string();
        e.g.
          mysqli_real_escape_string($dbc,trim($_POST['name'])); 
    9.3) [sql] SQL parameter
        e.g.
            INSERT INTO table (P1,P2,P3,P4) VALUES (p1,p2,p3,p4);
    9.4) check input data type and not empty.
        e.g.
        is_numeric(20) --> true
        is_numeric('hello') --> false

10) [sql] update column default value.
   ALTER TABLE guitarwars
    MODIFY COLUMN approved TINYINT
    DEFAULT 0
 
     
